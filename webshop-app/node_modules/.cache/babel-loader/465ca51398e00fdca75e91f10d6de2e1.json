{"ast":null,"code":"import React, { useState } from 'react';\nimport data from '../data';\nimport { Link } from 'react-router-dom';\ndocument.addEventListener('DOMContentLoaded', () => {\n  const slideTime = 500;\n  const previousButton = document.querySelector('#previous');\n  const nextButton = document.querySelector('#next');\n  const allSlides = [...document.querySelectorAll(\".slide\")];\n  let clickable = true;\n  let active = null;\n  let newActive = null;\n\n  function initSlider() {\n    allSlides.forEach(slide => {\n      slide.setAttribute('style', `transition: transform ${slideTime}ms ease;\n                             animation-duration: ${slideTime}ms;`);\n    });\n  }\n\n  function changeSlide(forward) {\n    if (clickable) {\n      clickable = false;\n      active = document.querySelector(\".active\");\n      const activeSlideIndex = allSlides.indexOf(active);\n\n      if (forward) {\n        // console.log(activeSlideIndex)\n        // console.log(allSlides.length)\n        // console.log((activeSlideIndex + 1) % allSlides.length)\n        newActive = allSlides[(activeSlideIndex + 1) % allSlides.length];\n        active.classList.add('slideOutLeft');\n        newActive.classList.add('slideInRight', 'active');\n      } else {\n        newActive = allSlides[(activeSlideIndex - 1 + allSlides.length) % allSlides.length];\n        active.classList.add('slideOutRight');\n        newActive.classList.add('slideInLeft', 'active');\n      }\n    }\n  }\n\n  allSlides.forEach(slide => {\n    slide.addEventListener('transitionend', () => {\n      if (slide === active && !clickable) {\n        clickable = true;\n        active.className = 'slide';\n      }\n    });\n  }); //Event Listeners - make buttons clickable\n\n  nextButton.addEventListener('click', () => {\n    changeSlide(true);\n  });\n  previousButton.addEventListener('click', () => {\n    changeSlide(false);\n  }); //Initslider making it happen\n\n  initSlider();\n  return;\n});","map":{"version":3,"sources":["/Users/joerivanmegen/Documents/TechGrounds/Webshop React/webshop-app/src/components/Caroussel.js"],"names":["React","useState","data","Link","document","addEventListener","slideTime","previousButton","querySelector","nextButton","allSlides","querySelectorAll","clickable","active","newActive","initSlider","forEach","slide","setAttribute","changeSlide","forward","activeSlideIndex","indexOf","length","classList","add","className"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAGAC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA6C,MAAK;AAC9C,QAAMC,SAAS,GAAG,GAAlB;AACA,QAAMC,cAAc,GAAGH,QAAQ,CAACI,aAAT,CAAuB,WAAvB,CAAvB;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAAnB;AACA,QAAME,SAAS,GAAG,CAAC,GAAGN,QAAQ,CAACO,gBAAT,CAA0B,QAA1B,CAAJ,CAAlB;AAEA,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,SAAS,GAAG,IAAhB;;AAEA,WAASC,UAAT,GAAqB;AACjBL,IAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAK,IAAI;AACvBA,MAAAA,KAAK,CAACC,YAAN,CACI,OADJ,EAEK,yBAAwBZ,SAAU;AACnD,mDAAmDA,SAAU,KAHjD;AAKH,KAND;AAOH;;AAED,WAASa,WAAT,CAAqBC,OAArB,EAA6B;AACzB,QAAGR,SAAH,EAAa;AACTA,MAAAA,SAAS,GAAG,KAAZ;AACAC,MAAAA,MAAM,GAAGT,QAAQ,CAACI,aAAT,CAAuB,SAAvB,CAAT;AACA,YAAMa,gBAAgB,GAAGX,SAAS,CAACY,OAAV,CAAkBT,MAAlB,CAAzB;;AACA,UAAGO,OAAH,EAAY;AACR;AACA;AACA;AAEAN,QAAAA,SAAS,GAAGJ,SAAS,CAAC,CAACW,gBAAgB,GAAG,CAApB,IAAyBX,SAAS,CAACa,MAApC,CAArB;AACAV,QAAAA,MAAM,CAACW,SAAP,CAAiBC,GAAjB,CAAqB,cAArB;AACAX,QAAAA,SAAS,CAACU,SAAV,CAAoBC,GAApB,CAAwB,cAAxB,EAAwC,QAAxC;AACH,OARD,MAQO;AACHX,QAAAA,SAAS,GAAGJ,SAAS,CAAC,CAACW,gBAAgB,GAAE,CAAlB,GAAsBX,SAAS,CAACa,MAAjC,IAA2Cb,SAAS,CAACa,MAAtD,CAArB;AACAV,QAAAA,MAAM,CAACW,SAAP,CAAiBC,GAAjB,CAAqB,eAArB;AACAX,QAAAA,SAAS,CAACU,SAAV,CAAoBC,GAApB,CAAwB,aAAxB,EAAuC,QAAvC;AACH;AACJ;AACJ;;AACDf,EAAAA,SAAS,CAACM,OAAV,CAAkBC,KAAK,IAAI;AACvBA,IAAAA,KAAK,CAACZ,gBAAN,CAAuB,eAAvB,EAAwC,MAAM;AAC1C,UAAIY,KAAK,KAAKJ,MAAV,IAAoB,CAACD,SAAzB,EAAoC;AAChCA,QAAAA,SAAS,GAAG,IAAZ;AACAC,QAAAA,MAAM,CAACa,SAAP,GAAmB,OAAnB;AACH;AACJ,KALD;AAMH,GAPD,EAxC8C,CAiD9C;;AACAjB,EAAAA,UAAU,CAACJ,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AACvCc,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;AAGAZ,EAAAA,cAAc,CAACF,gBAAf,CAAgC,OAAhC,EAAyC,MAAM;AAC3Cc,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD,EArD8C,CAyD9C;;AACAJ,EAAAA,UAAU;AAEV;AACH,CA7DD","sourcesContent":["import React, { useState } from 'react';\nimport data from '../data';\nimport {Link} from 'react-router-dom';\n\n\ndocument.addEventListener('DOMContentLoaded',() =>{\n    const slideTime = 500;\n    const previousButton = document.querySelector('#previous');\n    const nextButton = document.querySelector('#next');\n    const allSlides = [...document.querySelectorAll(\".slide\")];\n\n    let clickable = true;\n    let active = null;\n    let newActive = null;\n\n    function initSlider(){\n        allSlides.forEach(slide => {\n            slide.setAttribute(\n                'style', \n                `transition: transform ${slideTime}ms ease;\n                             animation-duration: ${slideTime}ms;`       \n            );\n        });\n    }\n\n    function changeSlide(forward){\n        if(clickable){\n            clickable = false;\n            active = document.querySelector(\".active\");\n            const activeSlideIndex = allSlides.indexOf(active);\n            if(forward) {\n                // console.log(activeSlideIndex)\n                // console.log(allSlides.length)\n                // console.log((activeSlideIndex + 1) % allSlides.length)\n\n                newActive = allSlides[(activeSlideIndex + 1) % allSlides.length];\n                active.classList.add('slideOutLeft');\n                newActive.classList.add('slideInRight', 'active');\n            } else {\n                newActive = allSlides[(activeSlideIndex -1 + allSlides.length) % allSlides.length];\n                active.classList.add('slideOutRight');\n                newActive.classList.add('slideInLeft', 'active');\n            }\n        }\n    }\n    allSlides.forEach(slide => {\n        slide.addEventListener('transitionend', () => {\n            if (slide === active && !clickable) {\n                clickable = true;\n                active.className = 'slide';\n            }\n        });\n    });\n\n    //Event Listeners - make buttons clickable\n    nextButton.addEventListener('click', () => {\n        changeSlide(true);\n    })\n    previousButton.addEventListener('click', () => {\n        changeSlide(false);\n    })\n\n    //Initslider making it happen\n    initSlider();\n\n    return\n})"]},"metadata":{},"sourceType":"module"}